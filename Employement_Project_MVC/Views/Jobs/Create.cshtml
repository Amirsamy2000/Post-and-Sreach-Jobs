@model Employement_Project_MVC.Models.Job

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
<h2>انشاء وظيفة</h2>

@using (Html.BeginForm("Create", "Jobs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <div class="alert alert-danger" id="erro" style="display:none">
        <span id="view-erro"></span>
    </div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.JobTtile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JobTtile, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JobTtile, "", new { @class = "text-danger" })
        </div>
    </div>
    <p id="text"></p>
    <div class="form-group">
        @Html.LabelFor(model => model.SreachEngigJob, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SreachEngigJob, new { htmlAttributes = new { @class = "form-control", id = "TitleSreach" } })
            @Html.ValidationMessageFor(model => model.SreachEngigJob, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobContent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.JobContent, new { htmlAttributes = new { @class = "form-control", id = "JobContent" } })
            @Html.ValidationMessageFor(model => model.JobContent, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="upload" class="form-control" id="image" />
            @*@Html.EditorFor(model => model.JobImage, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.JobImage, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MinPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.MinPrice, new { @class = "form-control", type = "number" })
            @Html.ValidationMessageFor(model => model.MinPrice, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">
            @Html.Label("الي", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.MaxPrice, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(model => model.MaxPrice, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, "نوع الوظيفة", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-3">
            <input type="submit" value="حفظ" class="btn btn-success btn-block"  id="checkImage" />
        </div>
    </div>
</div>
}

<div class="back">
    <a href="~/Jobs/Index" class="btn btn-danger btn-block">العودة للقائمة</a>
   
</div>


    <script>
     
       var listEx=['png','jpg','gif','bmp']
        document.getElementById("checkImage").onclick = function (eve) {
            document.getElementById("view-erro").innerHTML = "";
        //if (document.getElementById("image").value=="") {
        //    eve.preventDefault();
        //document.getElementById("erro").style.display = '';
        //document.getElementById("view-erro").textContent = "رجاء تحميل صورة حتي يتم اكمال المهم";
        //    }
            if (!listEx.includes(document.getElementById("image").value.substr(-3))) {

                eve.preventDefault();
                document.getElementById("erro").style.display = '';
                document.getElementById("view-erro").textContent = "رجاء تحميل صورة ذو امتداد png -- jpg";
            }
           
            if (document.getElementById("image").files[0].size / 1024 / 1024 >  1) {
                eve.preventDefault();
                document.getElementById("erro").style.display = '';
                document.getElementById("view-erro").textContent = "رجاء اختيار صورة اقل من 2 ميجا";
            }
             

    }

        CKEDITOR.replace("JobContent")

        document.getElementById("TitleSreach").onblur = function (event) {
          var title=  document.getElementById("TitleSreach").value
            if (title.length > 35) {
                document.getElementById("TitleSreach").style.color = "red";
                document.getElementById("text").textContent = "ادخل اقل من 35 حرف"
                document.getElementById("text").style.color = "red";
                document.getElementById("text").style.marginRight = "200px"
                document.getElementById("TitleSreach").focus;
            }
            else {
                document.getElementById("TitleSreach").style.color = "";
                document.getElementById("text").textContent = ""
                document.getElementById("text").style.color = "red";
            }
        }
</script>
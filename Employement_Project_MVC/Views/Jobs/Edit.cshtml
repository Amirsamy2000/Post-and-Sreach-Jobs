@model Employement_Project_MVC.Models.Job

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
<<div class="container" style="justify-items:center">
    
    <center>
        <div class="row" >
            <div class="col-sm-6" id="CreateNewJob">
                <div class="panel-body panel-info">
                  <center><h4>
                      ستقوم بلتعديل علي تفاصيل الوظيفة 
                      </h4>
                    <br />
                    <h5>بعد التعديل تفاصيل الوظيفة سيظهر التعديل لجميع المستخدمين وايضا المتقدمين علي الوظيفة  </h5>
                    </center>
                </div>
                @using (Html.BeginForm("Create", "Jobs", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <div class="alert alert-danger" id="erro" style="display:none">
                            <span id="view-erro"></span>
                        </div>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.JobTtile, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.JobTtile, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.JobTtile, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <p id="text"></p>
                        <div class="form-group">
                            @Html.LabelFor(model => model.SreachEngigJob, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SreachEngigJob, new { htmlAttributes = new { @class = "form-control", id = "TitleSreach" } })
                                @Html.ValidationMessageFor(model => model.SreachEngigJob, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.JobContent, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.JobContent, new { htmlAttributes = new { @class = "form-control", id = "JobContent" } })
                                @Html.ValidationMessageFor(model => model.JobContent, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.JobImage, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="file" name="upload" class="form-control" id="image" />
                                @*@Html.EditorFor(model => model.JobImage, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.JobImage, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MinPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MinPrice, new { htmlAttributes = new { @class = "form-control", id = "TitleSreach" } })
                                @Html.ValidationMessageFor(model => model.MinPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MaxPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MaxPrice, new { htmlAttributes = new { @class = "form-control", id = "TitleSreach" } })
                                @Html.ValidationMessageFor(model => model.MaxPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, "نوع الوظيفة", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-sm-5">
                            <input type="submit" value="حفظ" class="btn btn-success btn-block" id="checkImage" />

                        </div>
                        <br />
                        <br />
                        <br />
                        <div class="col-sm-12">
                            @if (ViewBag.Role == "admins")
                            {

                                <a class="btn btn-info" href="/Admin/Admin">Back!</a>
                            }
                            else
                            {
                                <a class="btn btn-info" href="~/Jobs/Index">Back!</a>
                            }

                        </div>

                    </div>
                    <br />
                    <br />



                }




            </div>
          
        </div>
    </center>

</div>
@section scripts{
    <script>
        $(function () {
            $("#checkImage").click(function () {
                $("#view-erro").empty();
                //if ($("#image").val() == "") {
                //    $("#erro").fadeIn();
                //    $("#view-erro").append("رجاء تحميل صورة حتي يتم اكمال المهمة");

                //    return false;
                //}
                var imageex = ['png', 'jpg', 'bmp', 'gif']
                var ex = $("#image").val().substr($("#image").val().lastIndexOf('.') + 1)
                if ($.inArray(ex, imageex) == -1) {
                    $("#erro").fadeIn();
                    $("#view-erro").append("رجاء اختار صورة فقط وليس ملف");
                    return false;
                }
                var size = document.getElementById("image").files[0].size / 1024 / 1024;
                if (size > 1) {
                    $("#erro").fadeIn();
                    $("#view-erro").append("رجاء اختار صورةلاتزيد عن 2 ميجا");
                    return false;
                }

            })


        })
        CKEDITOR.replace("JobContent")
        document.getElementById("TitleSreach").onblur = function (event) {
            var title = document.getElementById("TitleSreach").value
            if (title.length > 35) {
                document.getElementById("TitleSreach").style.color = "red";
                document.getElementById("text").textContent = "ادخل اقل من 35 حرف"
                document.getElementById("text").style.color = "red";
                document.getElementById("text").style.marginRight = "200px"
                document.getElementById("TitleSreach").focus;
            }
            else {
                document.getElementById("TitleSreach").style.color = "";
                document.getElementById("text").textContent = ""
                document.getElementById("text").style.color = "red";
            }
        }

    </script>
}

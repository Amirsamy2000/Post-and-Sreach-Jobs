@model Employement_Project_MVC.Models.ApplayForJob

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<h2>Edit</h2>
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
@using (Html.BeginForm("Edit","Home",FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <div class="alert alert-danger" id="erro" style="display:none">
        <center>        <span id="view-erro"></span></center>
    </div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <div class="form-group">
        @Html.LabelFor(model => model.JobId, "اسم الوظيفة", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.JobId)
            <div class="form-control"> @Model.job.JobTtile</div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Userid, "اسم المتقدم", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.Userid)
            <div class="form-control">@Model.user.UserName</div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CvApplay, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="CV" id="CV" class="form-control" />
            @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Message, new { id = "message" })
            @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LinksGlary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LinksGlary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LinksGlary, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.AplayOn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div>@Model.AplayOn</div>
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="حفظ التعديلات" class="btn btn-default" id="checkCv" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("العودة للقائمة", "GetJob")
</div>
<script>
    document.getElementById("checkCv").onclick = function (event) {

        var exCv = ["pdf", "doc", "docx"]
        var CvName = document.getElementById("CV").value;

        if (!exCv.includes(CvName.substr(CvName.lastIndexOf('.') + 1))) {
            event.preventDefault();
            document.getElementById("erro").style.display = '';
            document.getElementById("view-erro").textContent = "رجاء تحميل ملف ذو امتداد pdf, ppt, docx ";
        }
        if (CvName == "") {
            event.preventDefault();
            document.getElementById("erro").style.display = '';
            document.getElementById("view-erro").textContent = "الرجاء تحميل cv";
        }
    }

    CKEDITOR.replace("message");
</script>
